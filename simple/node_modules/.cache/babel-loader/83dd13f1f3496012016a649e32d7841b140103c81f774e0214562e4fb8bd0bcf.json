{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinay\\\\Desktop\\\\minor project\\\\simple\\\\src\\\\Mycomponents\\\\Student_component\\\\Address_details.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddressDetails({\n  onDataChange\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    permanentAddress: {\n      state: '',\n      city: '',\n      address: '',\n      district: '',\n      pincode: ''\n    },\n    correspondenceAddress: {\n      state: '',\n      city: '',\n      address: '',\n      district: '',\n      pincode: ''\n    },\n    sameAsPermanent: false\n  });\n  const [districts, setDistricts] = useState([]); // Array of districts based on selected state\n\n  // Event handler for form input changes\n  const handleChange = (e, addressType) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [addressType]: {\n        ...prevData[addressType],\n        [name]: value\n      }\n    }));\n    onDataChange(formData);\n  };\n  const handleStateChange = (e, addressType) => {\n    const {\n      value\n    } = e.target;\n    // Set the selected state and update districts based on state\n    setFormData(prevData => ({\n      ...prevData,\n      [addressType]: {\n        ...prevData[addressType],\n        state: value,\n        district: '' // Reset district on state change\n      }\n    }));\n    // Update districts array based on selected state\n    setDistricts(getDistrictsByState(value));\n  };\n  const handleCheckboxChange = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      sameAsPermanent: !prevData.sameAsPermanent,\n      correspondenceAddress: prevData.sameAsPermanent ? {\n        state: '',\n        city: '',\n        address: '',\n        district: '',\n        pincode: ''\n      } // Unchecked: Clear data\n      : {\n        ...prevData.permanentAddress\n      } // Checked: Copy permanent address data\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Submit form logic here\n    console.log('Form submitted:', formData);\n  };\n\n  // Function to fetch districts based on selected state\n  const getDistrictsByState = state => {\n    // Mock function; replace with actual data or API call\n    if (state === \"Andhra Pradesh\") {\n      return [\"andhra a\", \"andhara b\"];\n    } else if (state === \"Himachal Pradesh\") {\n      return [\"hp\", \"hp2\"];\n    }\n    return [];\n  };\n  // useEffect(() => {\n  //     // Send updated form data to parent component\n  //     onDataChange(formData);\n  // }, [formData, onDataChange]);\n\n  // Checkbox component\n  // const Checkbox = ({ label, value, onChange }) => (\n  //     <label>\n  //         <input type=\"checkbox\" checked={value} onChange={onChange} />\n  //         {label}\n  //     </label>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Permanent Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"state\",\n          value: formData.permanentAddress.state,\n          onChange: e => handleStateChange(e, 'permanentAddress'),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andaman and Nicobar Islands\",\n            children: \"Andaman and Nicobar Islands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andhra Pradesh\",\n            children: \"Andhra Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Himachal Pradesh\",\n            children: \"Himachal Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          name: \"city\",\n          value: formData.permanentAddress.city,\n          onChange: e => handleChange(e, 'permanentAddress')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"address\",\n          rows: \"4\",\n          cols: \"50\",\n          style: {\n            resize: 'both',\n            overflow: 'auto'\n          },\n          value: formData.permanentAddress.address,\n          onChange: e => handleChange(e, 'permanentAddress'),\n          placeholder: \"Enter your address here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"district\",\n          children: \"District:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"district\",\n          value: formData.permanentAddress.district,\n          onChange: e => handleChange(e, 'permanentAddress'),\n          required: true,\n          disabled: !formData.permanentAddress.state,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select District\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: district,\n            children: district\n          }, district, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pincode\",\n          children: \"Pincode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pincode\",\n          name: \"pincode\",\n          value: formData.permanentAddress.pincode,\n          onChange: e => handleChange(e, 'permanentAddress')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: formData.sameAsPermanent,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h8\", {\n      children: \"if Correspondence Address is same as Permanent Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Correspondence Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"state\",\n          value: formData.correspondenceAddress.state,\n          onChange: e => handleStateChange(e, 'correspondenceAddress'),\n          required: true,\n          disabled: formData.sameAsPermanent,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andaman and Nicobar Islands\",\n            children: \"Andaman and Nicobar Islands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andhra Pradesh\",\n            children: \"Andhra Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Himachal Pradesh\",\n            children: \"Himachal Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          name: \"city\",\n          value: formData.correspondenceAddress.city,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          disabled: formData.sameAsPermanent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"address\",\n          rows: \"4\",\n          cols: \"50\",\n          style: {\n            resize: 'both',\n            overflow: 'auto'\n          },\n          value: formData.correspondenceAddress.address,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          placeholder: \"Enter your address here...\",\n          disabled: formData.sameAsPermanent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"district\",\n          children: \"District:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"district\",\n          value: formData.correspondenceAddress.district,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          required: true,\n          disabled: !formData.correspondenceAddress.state || formData.sameAsPermanent,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select District\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: district,\n            children: district\n          }, district, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pincode\",\n          children: \"Pincode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pincode\",\n          name: \"pincode\",\n          value: formData.correspondenceAddress.pincode,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          disabled: formData.sameAsPermanent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(AddressDetails, \"u5Qrd62A69dxfaS1ZfPn0cUW6qo=\");\n_c = AddressDetails;\nvar _c;\n$RefreshReg$(_c, \"AddressDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddressDetails","onDataChange","_s","formData","setFormData","permanentAddress","state","city","address","district","pincode","correspondenceAddress","sameAsPermanent","districts","setDistricts","handleChange","e","addressType","name","value","target","prevData","handleStateChange","getDistrictsByState","handleCheckboxChange","handleSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","type","id","rows","cols","style","resize","overflow","placeholder","disabled","map","checked","_c","$RefreshReg$"],"sources":["C:/Users/Vinay/Desktop/minor project/simple/src/Mycomponents/Student_component/Address_details.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\n\r\nexport default function AddressDetails({ onDataChange }) {\r\n\r\n    const [formData, setFormData] = useState({\r\n        permanentAddress: {\r\n            state: '',\r\n            city: '',\r\n            address: '',\r\n            district: '',\r\n            pincode: ''\r\n        },\r\n        correspondenceAddress: {\r\n            state: '',\r\n            city: '',\r\n            address: '',\r\n            district: '',\r\n            pincode: ''\r\n        },\r\n        sameAsPermanent: false\r\n    });\r\n\r\n    const [districts, setDistricts] = useState([]); // Array of districts based on selected state\r\n\r\n    // Event handler for form input changes\r\n    const handleChange = (e, addressType) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            [addressType]: {\r\n                ...prevData[addressType],\r\n                [name]: value\r\n            }\r\n        }));\r\n        onDataChange(formData);\r\n    };\r\n\r\n    const handleStateChange = (e, addressType) => {\r\n        const { value } = e.target;\r\n        // Set the selected state and update districts based on state\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            [addressType]: {\r\n                ...prevData[addressType],\r\n                state: value,\r\n                district: '' // Reset district on state change\r\n            }\r\n        }));\r\n        // Update districts array based on selected state\r\n        setDistricts(getDistrictsByState(value));\r\n    };\r\n\r\n    const handleCheckboxChange = () => {\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            sameAsPermanent: !prevData.sameAsPermanent,\r\n            correspondenceAddress: prevData.sameAsPermanent\r\n                ? {\r\n                    state: '',\r\n                    city: '',\r\n                    address: '',\r\n                    district: '',\r\n                    pincode: ''\r\n                  } // Unchecked: Clear data\r\n                : { ...prevData.permanentAddress } // Checked: Copy permanent address data\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Submit form logic here\r\n        console.log('Form submitted:', formData);\r\n    };\r\n\r\n    // Function to fetch districts based on selected state\r\n    const getDistrictsByState = (state) => {\r\n        // Mock function; replace with actual data or API call\r\n        if (state === \"Andhra Pradesh\") {\r\n            return [\"andhra a\", \"andhara b\"];\r\n        } else if (state === \"Himachal Pradesh\") {\r\n            return [\"hp\", \"hp2\"];\r\n        }\r\n        return [];\r\n    };\r\n    // useEffect(() => {\r\n    //     // Send updated form data to parent component\r\n    //     onDataChange(formData);\r\n    // }, [formData, onDataChange]);\r\n\r\n\r\n    // Checkbox component\r\n    // const Checkbox = ({ label, value, onChange }) => (\r\n    //     <label>\r\n    //         <input type=\"checkbox\" checked={value} onChange={onChange} />\r\n    //         {label}\r\n    //     </label>\r\n    // );\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>Address</h2>\r\n            <h6>Permanent Address:</h6>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-fields-left\">\r\n                    <label htmlFor=\"state\">State:</label>\r\n                    <select\r\n                        name=\"state\"\r\n                        value={formData.permanentAddress.state}\r\n                        onChange={(e) => handleStateChange(e, 'permanentAddress')}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select State</option>\r\n                        <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\r\n                        <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                        <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"city\">City:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={formData.permanentAddress.city}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                    />\r\n                    <label htmlFor=\"address\">Address:</label>\r\n                    <textarea\r\n                        name=\"address\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        style={{ resize: 'both', overflow: 'auto' }}\r\n                        value={formData.permanentAddress.address}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                        placeholder=\"Enter your address here...\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-fields-right\">\r\n                    <label htmlFor=\"district\">District:</label>\r\n                    <select\r\n                        name=\"district\"\r\n                        value={formData.permanentAddress.district}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                        required\r\n                        disabled={!formData.permanentAddress.state}\r\n                    >\r\n                        <option value=\"\">Select District</option>\r\n                        {districts.map((district) => (\r\n                            <option key={district} value={district}>\r\n                                {district}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <label htmlFor=\"pincode\">Pincode:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"pincode\"\r\n                        name=\"pincode\"\r\n                        value={formData.permanentAddress.pincode}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.sameAsPermanent}\r\n                    onChange={handleCheckboxChange}\r\n                />\r\n            </label>\r\n            <h8>if Correspondence Address is same as Permanent Address</h8>\r\n         \r\n            <h6>Correspondence Address:</h6>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-fields-left\">\r\n                    <label htmlFor=\"state\">State:</label>\r\n                    <select\r\n                        name=\"state\"\r\n                        value={formData.correspondenceAddress.state}\r\n                        onChange={(e) => handleStateChange(e, 'correspondenceAddress')}\r\n                        required\r\n                        disabled={formData.sameAsPermanent}\r\n                    >\r\n                        <option value=\"\">Select State</option>\r\n                        <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\r\n                        <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                        <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"city\">City:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={formData.correspondenceAddress.city}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        disabled={formData.sameAsPermanent}\r\n                    />\r\n                    <label htmlFor=\"address\">Address:</label>\r\n                    <textarea\r\n                        name=\"address\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        style={{ resize: 'both', overflow: 'auto' }}\r\n                        value={formData.correspondenceAddress.address}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        placeholder=\"Enter your address here...\"\r\n                        disabled={formData.sameAsPermanent}\r\n                    />\r\n                </div>\r\n                <div className=\"form-fields-right\">\r\n                    <label htmlFor=\"district\">District:</label>\r\n                    <select\r\n                        name=\"district\"\r\n                        value={formData.correspondenceAddress.district}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        required\r\n                        disabled={!formData.correspondenceAddress.state || formData.sameAsPermanent}\r\n                    >\r\n                        <option value=\"\">Select District</option>\r\n                        {districts.map((district) => (\r\n                            <option key={district} value={district}>\r\n                                {district}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <label htmlFor=\"pincode\">Pincode:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"pincode\"\r\n                        name=\"pincode\"\r\n                        value={formData.correspondenceAddress.pincode}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        disabled={formData.sameAsPermanent}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}