{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinay\\\\Desktop\\\\minor project\\\\simple\\\\src\\\\Mycomponents\\\\Admin_component\\\\Change_password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../cssss/Student_css/Your_Profile.css';\nimport '../../cssss/Student_css/ChangePassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminChangePassword() {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setMessage(\"New passwords don't match.\");\n      return;\n    }\n    try {\n      // Retrieve token from local storage (or other storage) if using token authentication\n      const token = localStorage.getItem('adminToken');\n\n      // Send the request to change password\n      const response = await axios.post('http://localhost:3001/api/changepassAdmin/change-password-admin', {\n        currentPassword,\n        newPassword\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Include token in headers\n        }\n      });\n      if (response.status === 200) {\n        setMessage('Admin password successfully updated.');\n      } else {\n        setMessage(response.data.message || 'Failed to update password.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container change-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminChangePassword, \"My2ELs1Ksfr7x8czfs6CKY/cktA=\");\n_c = AdminChangePassword;\nvar _c;\n$RefreshReg$(_c, \"AdminChangePassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AdminChangePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSubmit","e","preventDefault","token","localStorage","getItem","response","post","headers","status","data","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Vinay/Desktop/minor project/simple/src/Mycomponents/Admin_component/Change_password.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../cssss/Student_css/Your_Profile.css';\r\nimport '../../cssss/Student_css/ChangePassword.css';\r\n\r\nexport default function AdminChangePassword() {\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            setMessage(\"New passwords don't match.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Retrieve token from local storage (or other storage) if using token authentication\r\n            const token = localStorage.getItem('adminToken');\r\n\r\n            // Send the request to change password\r\n            const response = await axios.post(\r\n                'http://localhost:3001/api/changepassAdmin/change-password-admin',\r\n                { currentPassword, newPassword },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`, // Include token in headers\r\n                    }\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                setMessage('Admin password successfully updated.');\r\n            } else {\r\n                setMessage(response.data.message || 'Failed to update password.');\r\n            }\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || 'An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container change-password-container\">\r\n            <h2>Admin Change Password</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Current Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={currentPassword}\r\n                        onChange={(e) => setCurrentPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    New Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Confirm New Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Update Password</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}