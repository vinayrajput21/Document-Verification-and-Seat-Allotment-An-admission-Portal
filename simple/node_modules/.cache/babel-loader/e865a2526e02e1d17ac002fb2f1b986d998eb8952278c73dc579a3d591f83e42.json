{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinay\\\\Desktop\\\\minor project\\\\simple\\\\src\\\\Mycomponents\\\\Student_component\\\\Change_password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../cssss/Student_css/Your_Profile.css';\nimport '../../cssss/Student_css/ChangePassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangePasswordForm() {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset error messages\n    setError('');\n    setMessage('');\n    if (newPassword !== confirmPassword) {\n      setError(\"New passwords don't match.\");\n      return;\n    }\n    try {\n      // Get token from localStorage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('User is not authenticated.');\n        return;\n      }\n\n      // Make API request to change password\n      const response = await fetch('http://localhost:3000/pi/changepass', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // Send token in Authorization header\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n\n      // Handle the response from the backend\n      if (response.ok) {\n        setMessage('Password successfully updated.');\n        // Clear input fields after success\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Failed to update password.');\n      }\n    } catch (error) {\n      setError('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container change-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(ChangePasswordForm, \"ZaEVGhafOmQ3aXmmmNSI1aztso4=\");\n_c = ChangePasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ChangePasswordForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChangePasswordForm","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","handleSubmit","e","preventDefault","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Vinay/Desktop/minor project/simple/src/Mycomponents/Student_component/Change_password.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../cssss/Student_css/Your_Profile.css';\r\nimport '../../cssss/Student_css/ChangePassword.css';\r\n\r\nexport default function ChangePasswordForm() {\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Reset error messages\r\n        setError('');\r\n        setMessage('');\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            setError(\"New passwords don't match.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Get token from localStorage\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                setError('User is not authenticated.');\r\n                return;\r\n            }\r\n\r\n            // Make API request to change password\r\n            const response = await fetch('http://localhost:3000/pi/changepass', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`, // Send token in Authorization header\r\n                },\r\n                body: JSON.stringify({ currentPassword, newPassword }),\r\n            });\r\n\r\n            // Handle the response from the backend\r\n            if (response.ok) {\r\n                setMessage('Password successfully updated.');\r\n                // Clear input fields after success\r\n                setCurrentPassword('');\r\n                setNewPassword('');\r\n                setConfirmPassword('');\r\n            } else {\r\n                const errorData = await response.json();\r\n                setError(errorData.message || 'Failed to update password.');\r\n            }\r\n        } catch (error) {\r\n            setError('An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container change-password-container\">\r\n            <h2>Change Password</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Current Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={currentPassword}\r\n                        onChange={(e) => setCurrentPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    New Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Confirm New Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Update Password</button>\r\n            </form>\r\n            {message && <p className=\"success-message\">{message}</p>}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}