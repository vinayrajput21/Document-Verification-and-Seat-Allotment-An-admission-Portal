{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinay\\\\Desktop\\\\minor project\\\\simple\\\\src\\\\Mycomponents\\\\Admin_component\\\\Seat_alloted.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MeritListAllocation() {\n  _s();\n  const [selectedCourse, setSelectedCourse] = useState('');\n  const [meritList, setMeritList] = useState([]);\n  const [categories, setCategories] = useState(null);\n  const [allocatedSeats, setAllocatedSeats] = useState({});\n  const [showSendMessages, setShowSendMessages] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (selectedCourse) {\n      fetchCategories();\n      fetchMeritList();\n    }\n  }, [selectedCourse]);\n\n  // Fetch the merit list from the backend\n  const fetchMeritList = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/FetchMerit/meritlist', {\n        course: selectedCourse\n      });\n      setMeritList(response.data.MeritList);\n      alert(\"Merit list fetched successfully\");\n    } catch (error) {\n      console.error('Error fetching merit list:', error);\n      setError('Failed to fetch merit list.');\n      alert(\"Merit list not fetched\");\n    }\n  };\n\n  // Fetch category data based on the selected course\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/Cate/category', {\n        course: selectedCourse\n      });\n      setCategories(response.data.category);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      setError('Failed to fetch category data.');\n    }\n  };\n\n  // Handle course change\n  const handleCourseChange = e => {\n    setSelectedCourse(e.target.value);\n    setCategories(null);\n    setAllocatedSeats({});\n    setShowSendMessages(false);\n  };\n\n  // Allocate seats based on merit list and category seats\n  const allocateSeats = () => {\n    if (!meritList.length || !categories) {\n      setError('Merit list or category data is not available.');\n      return;\n    }\n    const categorySeats = {\n      ...categories\n    }; // Clone category data to track seat availability\n    const allocation = {}; // Object to store seat allocation results\n\n    // Sort the merit list by entrance marks (highest to lowest)\n    const sortedMeritList = [...meritList].sort((a, b) => b.entranceMark - a.entranceMark);\n\n    // Iterate through the sorted merit list and allocate seats\n    sortedMeritList.forEach(candidate => {\n      const category = candidate.basicDetails.category;\n      if (categorySeats[category] > 0) {\n        // Allocate seat if available\n        allocation[candidate.applicationId] = {\n          ...candidate,\n          seatAllotted: true\n        };\n        categorySeats[category] -= 1; // Decrement available seats for this category\n      } else {\n        // No seats available\n        allocation[candidate.applicationId] = {\n          ...candidate,\n          seatAllotted: false\n        };\n      }\n    });\n    setAllocatedSeats(allocation);\n    setShowSendMessages(true);\n    setError(null);\n  };\n  const sendMessages = () => {\n    // const allocatedCandidates = Object.values(allocatedSeats).filter((candidate) => candidate.seatAllotted);\n\n    // // Simulate sending messages (replace with your logic to send messages)\n    // allocatedCandidates.forEach((candidate) => {\n    //   console.log(`Message sent to: ${candidate.name}, Application ID: ${candidate.applicationId}`);\n    // });\n\n    // alert(`Messages sent to ${allocatedCandidates.length} students.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Merit List Seat Allocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"course\",\n      children: \"Select your course:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"course\",\n      value: selectedCourse,\n      onChange: handleCourseChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Course --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Btech\",\n        children: \"Btech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Mca\",\n        children: \"MCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"BE\",\n        children: \"BE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Mba\",\n        children: \"MBA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Bca\",\n        children: \"BCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), Object.keys(allocatedSeats).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: \"30px\",\n          marginBottom: \"10px\"\n        },\n        children: \"Seat Allocation Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Application ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Entrance Marks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Seat Allotted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(allocatedSeats).map(candidate => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: candidate.applicationId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: candidate.basicDetails.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: candidate.basicDetails.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: candidate.entranceMark\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: candidate.seatAllotted ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)]\n          }, candidate.applicationId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), categories && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: allocateSeats,\n      style: {\n        width: \"146px\",\n        marginBottom: '20px'\n      },\n      children: \"Allocate Seats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), showSendMessages && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessages,\n      style: {\n        width: \"146px\",\n        marginTop: '20px',\n        marginLeft: \"20px\",\n        color: 'white'\n      },\n      children: \"Send Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(MeritListAllocation, \"nYDZp8aYyF6aMCrdEzMekNT6CJc=\");\n_c = MeritListAllocation;\nvar _c;\n$RefreshReg$(_c, \"MeritListAllocation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MeritListAllocation","_s","selectedCourse","setSelectedCourse","meritList","setMeritList","categories","setCategories","allocatedSeats","setAllocatedSeats","showSendMessages","setShowSendMessages","error","setError","fetchCategories","fetchMeritList","response","post","course","data","MeritList","alert","console","category","handleCourseChange","e","target","value","allocateSeats","length","categorySeats","allocation","sortedMeritList","sort","a","b","entranceMark","forEach","candidate","basicDetails","applicationId","seatAllotted","sendMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","Object","keys","style","marginTop","marginBottom","border","width","borderCollapse","values","map","name","onClick","marginLeft","color","_c","$RefreshReg$"],"sources":["C:/Users/Vinay/Desktop/minor project/simple/src/Mycomponents/Admin_component/Seat_alloted.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function MeritListAllocation() {\r\n  const [selectedCourse, setSelectedCourse] = useState('');\r\n  const [meritList, setMeritList] = useState([]);\r\n  const [categories, setCategories] = useState(null);\r\n  const [allocatedSeats, setAllocatedSeats] = useState({});\r\n  const [showSendMessages, setShowSendMessages] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedCourse) {\r\n      fetchCategories();\r\n      fetchMeritList();\r\n    }\r\n  }, [selectedCourse]);\r\n\r\n  // Fetch the merit list from the backend\r\n  const fetchMeritList = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/FetchMerit/meritlist', { course: selectedCourse });\r\n      setMeritList(response.data.MeritList);\r\n      alert(\"Merit list fetched successfully\");\r\n    } catch (error) {\r\n      console.error('Error fetching merit list:', error);\r\n      setError('Failed to fetch merit list.');\r\n      alert(\"Merit list not fetched\");\r\n    }\r\n  };\r\n\r\n  // Fetch category data based on the selected course\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/Cate/category', { course: selectedCourse });\r\n      setCategories(response.data.category);\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      setError('Failed to fetch category data.');\r\n    }\r\n  };\r\n\r\n  // Handle course change\r\n  const handleCourseChange = (e) => {\r\n    setSelectedCourse(e.target.value);\r\n    setCategories(null);\r\n    setAllocatedSeats({});\r\n    setShowSendMessages(false);\r\n  };\r\n\r\n  // Allocate seats based on merit list and category seats\r\n  const allocateSeats = () => {\r\n    if (!meritList.length || !categories) {\r\n      setError('Merit list or category data is not available.');\r\n      return;\r\n    }\r\n\r\n    const categorySeats = { ...categories }; // Clone category data to track seat availability\r\n    const allocation = {}; // Object to store seat allocation results\r\n\r\n    // Sort the merit list by entrance marks (highest to lowest)\r\n    const sortedMeritList = [...meritList].sort((a, b) => b.entranceMark - a.entranceMark);\r\n\r\n    // Iterate through the sorted merit list and allocate seats\r\n    sortedMeritList.forEach((candidate) => {\r\n      const category = candidate.basicDetails.category;\r\n\r\n      if (categorySeats[category] > 0) {\r\n        // Allocate seat if available\r\n        allocation[candidate.applicationId] = { ...candidate, seatAllotted: true };\r\n        categorySeats[category] -= 1; // Decrement available seats for this category\r\n      } else {\r\n        // No seats available\r\n        allocation[candidate.applicationId] = { ...candidate, seatAllotted: false };\r\n      }\r\n    });\r\n\r\n    setAllocatedSeats(allocation);\r\n    setShowSendMessages(true);\r\n    setError(null);\r\n  };\r\n  const sendMessages = () => {\r\n    // const allocatedCandidates = Object.values(allocatedSeats).filter((candidate) => candidate.seatAllotted);\r\n\r\n    // // Simulate sending messages (replace with your logic to send messages)\r\n    // allocatedCandidates.forEach((candidate) => {\r\n    //   console.log(`Message sent to: ${candidate.name}, Application ID: ${candidate.applicationId}`);\r\n    // });\r\n\r\n    // alert(`Messages sent to ${allocatedCandidates.length} students.`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Merit List Seat Allocation</h1>\r\n\r\n      {/* Select Course Dropdown */}\r\n      <label htmlFor=\"course\">Select your course:</label>\r\n      <select id=\"course\" value={selectedCourse} onChange={handleCourseChange}>\r\n        <option value=\"\">-- Select Course --</option>\r\n        <option value=\"Btech\">Btech</option>\r\n        <option value=\"Mca\">MCA</option>\r\n        <option value=\"BE\">BE</option>\r\n        <option value=\"Mba\">MBA</option>\r\n        <option value=\"Bca\">BCA</option>\r\n      </select>\r\n\r\n     \r\n\r\n      {/* Display allocated results */}\r\n      {Object.keys(allocatedSeats).length > 0 && (\r\n        <div>\r\n          <h2 style={{ marginTop:\"30px\",marginBottom:\"10px\" }}>Seat Allocation Results</h2>\r\n          <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Application ID</th>\r\n                <th>Name</th>\r\n                <th>Category</th>\r\n                <th>Entrance Marks</th>\r\n                <th>Seat Allotted</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.values(allocatedSeats).map((candidate) => (\r\n                <tr key={candidate.applicationId}>\r\n                  <td>{candidate.applicationId}</td>\r\n                  <td>{candidate.basicDetails.name}</td>\r\n                  <td>{candidate.basicDetails.category}</td>\r\n                  <td>{candidate.entranceMark}</td>\r\n                  <td>{candidate.seatAllotted ? 'Yes' : 'No'}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n       {categories && (\r\n        <button onClick={allocateSeats} style={{ width:\"146px\",marginBottom: '20px' }}>\r\n          Allocate Seats\r\n        </button>\r\n      )}\r\n        {/* Display \"Send Messages\" button */}\r\n        {showSendMessages && (\r\n        <button onClick={sendMessages} style={{width:\"146px\", marginTop: '20px',marginLeft:\"20px\", color: 'white',  }}>\r\n          Send Messages\r\n        </button>\r\n      )}\r\n\r\n      {/* Display available categories and seats\r\n      {categories && (\r\n        <div>\r\n          <h2>Available Seats by Category</h2>\r\n          <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Category</th>\r\n                <th>Available Seats</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(categories).map(([category, seats]) => (\r\n                <tr key={category}>\r\n                  <td>{category}</td>\r\n                  <td>{seats}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAIM,cAAc,EAAE;MAClBY,eAAe,CAAC,CAAC;MACjBC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACb,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,gDAAgD,EAAE;QAAEC,MAAM,EAAEhB;MAAe,CAAC,CAAC;MAC/GG,YAAY,CAACW,QAAQ,CAACG,IAAI,CAACC,SAAS,CAAC;MACrCC,KAAK,CAAC,iCAAiC,CAAC;IAC1C,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,6BAA6B,CAAC;MACvCQ,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;;EAED;EACA,MAAMP,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,yCAAyC,EAAE;QAAEC,MAAM,EAAEhB;MAAe,CAAC,CAAC;MACxGK,aAAa,CAACS,QAAQ,CAACG,IAAI,CAACI,QAAQ,CAAC;IACvC,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,gCAAgC,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMW,kBAAkB,GAAIC,CAAC,IAAK;IAChCtB,iBAAiB,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACjCpB,aAAa,CAAC,IAAI,CAAC;IACnBE,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrBE,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMiB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACxB,SAAS,CAACyB,MAAM,IAAI,CAACvB,UAAU,EAAE;MACpCO,QAAQ,CAAC,+CAA+C,CAAC;MACzD;IACF;IAEA,MAAMiB,aAAa,GAAG;MAAE,GAAGxB;IAAW,CAAC,CAAC,CAAC;IACzC,MAAMyB,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAMC,eAAe,GAAG,CAAC,GAAG5B,SAAS,CAAC,CAAC6B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,YAAY,GAAGF,CAAC,CAACE,YAAY,CAAC;;IAEtF;IACAJ,eAAe,CAACK,OAAO,CAAEC,SAAS,IAAK;MACrC,MAAMf,QAAQ,GAAGe,SAAS,CAACC,YAAY,CAAChB,QAAQ;MAEhD,IAAIO,aAAa,CAACP,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC/B;QACAQ,UAAU,CAACO,SAAS,CAACE,aAAa,CAAC,GAAG;UAAE,GAAGF,SAAS;UAAEG,YAAY,EAAE;QAAK,CAAC;QAC1EX,aAAa,CAACP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,MAAM;QACL;QACAQ,UAAU,CAACO,SAAS,CAACE,aAAa,CAAC,GAAG;UAAE,GAAGF,SAAS;UAAEG,YAAY,EAAE;QAAM,CAAC;MAC7E;IACF,CAAC,CAAC;IAEFhC,iBAAiB,CAACsB,UAAU,CAAC;IAC7BpB,mBAAmB,CAAC,IAAI,CAAC;IACzBE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EACD,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzB;;IAEA;IACA;IACA;IACA;;IAEA;EAAA,CACD;EAED,oBACE3C,OAAA;IAAA4C,QAAA,gBACE5C,OAAA;MAAA4C,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnChD,OAAA;MAAOiD,OAAO,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnDhD,OAAA;MAAQkD,EAAE,EAAC,QAAQ;MAACtB,KAAK,EAAEzB,cAAe;MAACgD,QAAQ,EAAE1B,kBAAmB;MAAAmB,QAAA,gBACtE5C,OAAA;QAAQ4B,KAAK,EAAC,EAAE;QAAAgB,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7ChD,OAAA;QAAQ4B,KAAK,EAAC,OAAO;QAAAgB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpChD,OAAA;QAAQ4B,KAAK,EAAC,KAAK;QAAAgB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChChD,OAAA;QAAQ4B,KAAK,EAAC,IAAI;QAAAgB,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9BhD,OAAA;QAAQ4B,KAAK,EAAC,KAAK;QAAAgB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChChD,OAAA;QAAQ4B,KAAK,EAAC,KAAK;QAAAgB,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EAKRI,MAAM,CAACC,IAAI,CAAC5C,cAAc,CAAC,CAACqB,MAAM,GAAG,CAAC,iBACrC9B,OAAA;MAAA4C,QAAA,gBACE5C,OAAA;QAAIsD,KAAK,EAAE;UAAEC,SAAS,EAAC,MAAM;UAACC,YAAY,EAAC;QAAO,CAAE;QAAAZ,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjFhD,OAAA;QAAOyD,MAAM,EAAC,GAAG;QAACH,KAAK,EAAE;UAAEI,KAAK,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAW,CAAE;QAAAf,QAAA,gBACrE5C,OAAA;UAAA4C,QAAA,eACE5C,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAI;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBhD,OAAA;cAAA4C,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbhD,OAAA;cAAA4C,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBhD,OAAA;cAAA4C,QAAA,EAAI;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBhD,OAAA;cAAA4C,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRhD,OAAA;UAAA4C,QAAA,EACGQ,MAAM,CAACQ,MAAM,CAACnD,cAAc,CAAC,CAACoD,GAAG,CAAEtB,SAAS,iBAC3CvC,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAKL,SAAS,CAACE;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClChD,OAAA;cAAA4C,QAAA,EAAKL,SAAS,CAACC,YAAY,CAACsB;YAAI;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtChD,OAAA;cAAA4C,QAAA,EAAKL,SAAS,CAACC,YAAY,CAAChB;YAAQ;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1ChD,OAAA;cAAA4C,QAAA,EAAKL,SAAS,CAACF;YAAY;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjChD,OAAA;cAAA4C,QAAA,EAAKL,SAAS,CAACG,YAAY,GAAG,KAAK,GAAG;YAAI;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GALzCT,SAAS,CAACE,aAAa;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAM5B,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN,EAECzC,UAAU,iBACVP,OAAA;MAAQ+D,OAAO,EAAElC,aAAc;MAACyB,KAAK,EAAE;QAAEI,KAAK,EAAC,OAAO;QAACF,YAAY,EAAE;MAAO,CAAE;MAAAZ,QAAA,EAAC;IAE/E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EAEErC,gBAAgB,iBACjBX,OAAA;MAAQ+D,OAAO,EAAEpB,YAAa;MAACW,KAAK,EAAE;QAACI,KAAK,EAAC,OAAO;QAAEH,SAAS,EAAE,MAAM;QAACS,UAAU,EAAC,MAAM;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAArB,QAAA,EAAC;IAE/G;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAwBE,CAAC;AAEV;AAAC9C,EAAA,CA3KuBD,mBAAmB;AAAAiE,EAAA,GAAnBjE,mBAAmB;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}