{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinay\\\\Desktop\\\\simple\\\\src\\\\Mycomponents\\\\Student_component\\\\Address_details.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddressDetails() {\n  _s();\n  const Checkbox = ({\n    label,\n    value,\n    onChange\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this), label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 11\n    }, this);\n  };\n  const [formData, setFormData] = useState({\n    permanentAddress: {\n      state: '',\n      city: '',\n      address: '',\n      district: '',\n      pincode: ''\n    },\n    correspondenceAddress: {\n      state: '',\n      city: '',\n      address: '',\n      district: '',\n      pincode: ''\n    },\n    sameAsPermanent: false\n  });\n  const [districts, setDistricts] = useState([]); // Array of districts based on selected state\n\n  // Event handler for form input changes\n  const handleChange = (e, addressType) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [addressType]: {\n        ...prevData[addressType],\n        [name]: value\n      }\n    }));\n  };\n  const handleStateChange = (e, addressType) => {\n    const {\n      value\n    } = e.target;\n    // Set the selected state and update districts based on state\n    setFormData(prevData => ({\n      ...prevData,\n      [addressType]: {\n        ...prevData[addressType],\n        state: value,\n        district: '' // Reset district on state change\n      }\n    }));\n    // Update districts array based on selected state\n    setDistricts(getDistrictsByState(value));\n  };\n  const handleCheckboxChange = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      sameAsPermanent: !prevData.sameAsPermanent,\n      correspondenceAddress: prevData.sameAsPermanent ? prevData.correspondenceAddress // Unchecked: Keep existing data\n      : {\n        ...prevData.permanentAddress\n      } // Checked: Copy permanent address data\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Submit form logic here\n    console.log('Form submitted:', formData);\n  };\n\n  // Function to fetch districts based on selected state\n  const getDistrictsByState = state => {\n    // Mock function; replace with actual data or API call\n    if (state === \"Andhra Pradesh\") {\n      return [\"District1\", \"District2\"];\n    } else if (state === \"Himachal Pradesh\") {\n      return [\"DistrictA\", \"DistrictB\"];\n    }\n    return [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Permanent Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"state\",\n          value: formData.permanentAddress.state,\n          onChange: e => handleStateChange(e, 'permanentAddress'),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andaman and Nicobar Islands\",\n            children: \"Andaman and Nicobar Islands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andhra Pradesh\",\n            children: \"Andhra Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Himachal Pradesh\",\n            children: \"Himachal Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          name: \"city\",\n          value: formData.permanentAddress.city,\n          onChange: e => handleChange(e, 'permanentAddress')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"address\",\n          rows: \"4\",\n          cols: \"50\",\n          style: {\n            resize: 'both',\n            overflow: 'auto'\n          },\n          value: formData.permanentAddress.address,\n          onChange: e => handleChange(e, 'permanentAddress'),\n          placeholder: \"Enter your address here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"district\",\n          children: \"District:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"district\",\n          value: formData.permanentAddress.district,\n          onChange: e => handleChange(e, 'permanentAddress'),\n          required: true,\n          disabled: !formData.permanentAddress.state,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select District\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: district,\n            children: district\n          }, district, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pincode\",\n          children: \"Pincode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pincode\",\n          name: \"pincode\",\n          value: formData.permanentAddress.pincode,\n          onChange: e => handleChange(e, 'permanentAddress')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      className: \"checkbox\",\n      lable: \"If Correspondence address is same as Permanent address\",\n      checked: formData.sameAsPermanent,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Correspondence Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"state\",\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"state\",\n          value: formData.correspondenceAddress.state,\n          onChange: e => handleStateChange(e, 'correspondenceAddress'),\n          required: true,\n          disabled: formData.sameAsPermanent,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andaman and Nicobar Islands\",\n            children: \"Andaman and Nicobar Islands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Andhra Pradesh\",\n            children: \"Andhra Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Himachal Pradesh\",\n            children: \"Himachal Pradesh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          name: \"city\",\n          value: formData.correspondenceAddress.city,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          disabled: formData.sameAsPermanent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"address\",\n          rows: \"4\",\n          cols: \"50\",\n          style: {\n            resize: 'both',\n            overflow: 'auto'\n          },\n          value: formData.correspondenceAddress.address,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          placeholder: \"Enter your address here...\",\n          disabled: formData.sameAsPermanent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"district\",\n          children: \"District:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"district\",\n          value: formData.correspondenceAddress.district,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          required: true,\n          disabled: !formData.correspondenceAddress.state || formData.sameAsPermanent,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select District\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: district,\n            children: district\n          }, district, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pincode\",\n          children: \"Pincode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"pincode\",\n          name: \"pincode\",\n          value: formData.correspondenceAddress.pincode,\n          onChange: e => handleChange(e, 'correspondenceAddress'),\n          disabled: formData.sameAsPermanent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(AddressDetails, \"u5Qrd62A69dxfaS1ZfPn0cUW6qo=\");\n_c = AddressDetails;\nvar _c;\n$RefreshReg$(_c, \"AddressDetails\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddressDetails","_s","Checkbox","label","value","onChange","children","type","checked","fileName","_jsxFileName","lineNumber","columnNumber","formData","setFormData","permanentAddress","state","city","address","district","pincode","correspondenceAddress","sameAsPermanent","districts","setDistricts","handleChange","e","addressType","name","target","prevData","handleStateChange","getDistrictsByState","handleCheckboxChange","handleSubmit","preventDefault","console","log","className","onSubmit","htmlFor","required","id","rows","cols","style","resize","overflow","placeholder","disabled","map","lable","_c","$RefreshReg$"],"sources":["C:/Users/Vinay/Desktop/simple/src/Mycomponents/Student_component/Address_details.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function AddressDetails() {\r\n    const Checkbox = ({ label, value, onChange }) => {\r\n        return (\r\n          <label>\r\n            <input type=\"checkbox\" checked={value} onChange={onChange} />\r\n            {label}\r\n          </label>\r\n        );\r\n      };\r\n    const [formData, setFormData] = useState({\r\n        permanentAddress: {\r\n            state: '',\r\n            city: '',\r\n            address: '',\r\n            district: '',\r\n            pincode: ''\r\n        },\r\n        correspondenceAddress: {\r\n            state: '',\r\n            city: '',\r\n            address: '',\r\n            district: '',\r\n            pincode: ''\r\n        },\r\n        sameAsPermanent: false\r\n    });\r\n\r\n    const [districts, setDistricts] = useState([]); // Array of districts based on selected state\r\n\r\n    // Event handler for form input changes\r\n    const handleChange = (e, addressType) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            [addressType]: {\r\n                ...prevData[addressType],\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleStateChange = (e, addressType) => {\r\n        const { value } = e.target;\r\n        // Set the selected state and update districts based on state\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            [addressType]: {\r\n                ...prevData[addressType],\r\n                state: value,\r\n                district: '' // Reset district on state change\r\n            }\r\n        }));\r\n        // Update districts array based on selected state\r\n        setDistricts(getDistrictsByState(value));\r\n    };\r\n\r\n    const handleCheckboxChange = () => {\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            sameAsPermanent: !prevData.sameAsPermanent,\r\n            correspondenceAddress: prevData.sameAsPermanent\r\n                ? prevData.correspondenceAddress // Unchecked: Keep existing data\r\n                : { ...prevData.permanentAddress } // Checked: Copy permanent address data\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Submit form logic here\r\n        console.log('Form submitted:', formData);\r\n    };\r\n\r\n    // Function to fetch districts based on selected state\r\n    const getDistrictsByState = (state) => {\r\n        // Mock function; replace with actual data or API call\r\n        if (state === \"Andhra Pradesh\") {\r\n            return [\"District1\", \"District2\"];\r\n        } else if (state === \"Himachal Pradesh\") {\r\n            return [\"DistrictA\", \"DistrictB\"];\r\n        }\r\n        return [];\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h2>Address</h2>\r\n            <h6>Permanent Address:</h6>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-fields-left\">\r\n                    <label htmlFor=\"state\">State:</label>\r\n                    <select\r\n                        name=\"state\"\r\n                        value={formData.permanentAddress.state}\r\n                        onChange={(e) => handleStateChange(e, 'permanentAddress')}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select State</option>\r\n                        <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\r\n                        <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                        <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"city\">City:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={formData.permanentAddress.city}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                    />\r\n                    <label htmlFor=\"address\">Address:</label>\r\n                    <textarea\r\n                        name=\"address\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        style={{ resize: 'both', overflow: 'auto' }}\r\n                        value={formData.permanentAddress.address}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                        placeholder=\"Enter your address here...\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-fields-right\">\r\n                    <label htmlFor=\"district\">District:</label>\r\n                    <select\r\n                        name=\"district\"\r\n                        value={formData.permanentAddress.district}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                        required\r\n                        disabled={!formData.permanentAddress.state}\r\n                    >\r\n                        <option value=\"\">Select District</option>\r\n                        {districts.map((district) => (\r\n                            <option key={district} value={district}>\r\n                                {district}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <label htmlFor=\"pincode\">Pincode:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"pincode\"\r\n                        name=\"pincode\"\r\n                        value={formData.permanentAddress.pincode}\r\n                        onChange={(e) => handleChange(e, 'permanentAddress')}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n            <Checkbox className='checkbox'\r\n                    lable=\"If Correspondence address is same as Permanent address\"\r\n                    checked={formData.sameAsPermanent}\r\n                    onChange={handleCheckboxChange}\r\n        \r\n                />\r\n         \r\n            <h6>Correspondence Address:</h6>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-fields-left\">\r\n                    <label htmlFor=\"state\">State:</label>\r\n                    <select\r\n                        name=\"state\"\r\n                        value={formData.correspondenceAddress.state}\r\n                        onChange={(e) => handleStateChange(e, 'correspondenceAddress')}\r\n                        required\r\n                        disabled={formData.sameAsPermanent}\r\n                    >\r\n                        <option value=\"\">Select State</option>\r\n                        <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\r\n                        <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                        <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"city\">City:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={formData.correspondenceAddress.city}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        disabled={formData.sameAsPermanent}\r\n                    />\r\n                    <label htmlFor=\"address\">Address:</label>\r\n                    <textarea\r\n                        name=\"address\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        style={{ resize: 'both', overflow: 'auto' }}\r\n                        value={formData.correspondenceAddress.address}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        placeholder=\"Enter your address here...\"\r\n                        disabled={formData.sameAsPermanent}\r\n                    />\r\n                </div>\r\n                <div className=\"form-fields-right\">\r\n                    <label htmlFor=\"district\">District:</label>\r\n                    <select\r\n                        name=\"district\"\r\n                        value={formData.correspondenceAddress.district}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        required\r\n                        disabled={!formData.correspondenceAddress.state || formData.sameAsPermanent}\r\n                    >\r\n                        <option value=\"\">Select District</option>\r\n                        {districts.map((district) => (\r\n                            <option key={district} value={district}>\r\n                                {district}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <label htmlFor=\"pincode\">Pincode:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"pincode\"\r\n                        name=\"pincode\"\r\n                        value={formData.correspondenceAddress.pincode}\r\n                        onChange={(e) => handleChange(e, 'correspondenceAddress')}\r\n                        disabled={formData.sameAsPermanent}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}